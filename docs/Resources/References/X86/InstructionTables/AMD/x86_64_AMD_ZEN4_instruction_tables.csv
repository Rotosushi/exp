"AMD Zen 4",,,,,,
"List of instruction timings and macro-operation breakdown",,,,,,
,,,,,,
"Explanation of column headings:",,,,,,
"Instruction:","Name of instruction. Multiple names mean that these instructions have the same data. Similar instructions with or without V name prefix and with two or three operands behave the same unless otherwise noted. ",,,,,
"Operands:","i = immediate constant, r = any register, r32 = 32-bit register, etc., mm = 64 bit mmx register, x = 128 bit xmm register, y = 256 bit ymm register, z = 512 bit zmm register, xy = vector register no bigger than 256 bits, v = any vector register, k = mask register, m = any memory operand including indirect operands, m64 means 64-bit memory operand, etc.",,,,,
"Ops:","Number of macro-operations issued from instruction decoder to schedulers.",,,,,
"Latency:","This is the delay that the instruction generates in a dependency chain. The numbers are minimum values. Cache misses, misalignment, and exceptions may increase the clock counts considerably. The latency listed does not include the memory operand where the listing for register and memory operand are joined (r/m).",,,,,
"Reciprocal throughput:","This is also called issue latency. This value indicates the average number of clock cycles from the execution of an instruction begins to a subsequent independent instruction of the same kind can begin to execute. A value of 1/3 indicates that the execution units can handle 3 instructions per clock cycle in one thread. However, the throughput may be limited by other bottlenecks in the pipeline. ",,,,,
"Execution pipe:","Indicates which execution pipe or unit is used for the macro-operations:
P0: Floating point and vector pipe 0
P1: Floating point and vector pipe 1
P2: Floating point and vector pipe 2
P3: Floating point and vector pipe 3
P0 P1: Uses both P0 and P1
P01: Uses either P0 and P1
Where no unit is specified, it may use one or more integer pipe or address generation units.
Two micro-operations can execute simultaneously if they go to different
execution pipes",,,,,
,,,,,,
"Integer instructions",,,,,,
"Instruction","Operands","Ops","Latency","Reciprocal throughput","Execution pipes","Notes"
"Move instructions",,,,,,
"MOV","r8,r8","1","1","0.25",,
"MOV","r8h,r8","1","1","0.5",,
"MOV","r16,r16","1","1","0.25",,
"MOV","r32,r32","1","0","0.17",,"renaming"
"MOV","r64,r64","1","0","0.17",,"renaming"
"MOV","r,i","1","1","0.25",,
"MOV","r,m","1","0-4","0.33",,"may mirror"
"MOV","m,r","1","0-4","0.5",,"may mirror"
"MOV","m,i","1",,"0.5",,
"MOVNTI","m,r","1","~900","1",,
"MOVZX, MOVSX","r,r","1","1","0.25",,
"MOVZX, MOVSX","r,m","1","4","0.33",,
"MOVSXD","r64,r32","1","1","0.25",,
"MOVSXD","r64,m32","1","3","0.33",,
"CMOVcc","r,r","1","1","0.5",,
"CMOVcc","r,m","1",,"0.5",,
"XCHG","r8,r8","2","1","1",,
"XCHG","r16,r16","2","1","1",,
"XCHG","r32,r32","2","0","0.33",,"renaming"
"XCHG","r64,r64","2","0","0.33",,"renaming"
"XCHG","r,m","2","7-8","7-8",,"depends on hw"
"XLAT",,"3","6","2",,
"PUSH","r","1",,"0.5",,
"PUSH","i","1",,"0.5",,
"PUSH","m","2",,"1",,
"PUSHF(D/Q)",,"11",,"4",,
"PUSH","sp","2",,"1",,
"PUSHA(D)",,"9",,"4",,
"POP","r","1",,"0.33",,
"POP","m","2",,"1",,
"POPF(D/Q)",,"36",,"13",,
"POPA(D)",,"16",,"6",,
"POP","sp","1",,"2",,
"LEA","r16,[m]","2","1-3","1",,
"LEA","r32/64,[m]","1","1","0.25",,"rip relative"
"LEA","r32/64,[m]","1","1","0.25",,"1-2 components"
"LEA","r32/64,[m]","2","2","0.5",,"3 components"
"LAHF",,"1","1","1",,
"SAHF",,"1","1","0.25",,
"SALC",,"1","1","1",,
"BSWAP","r","1","1","0.25",,
"MOVBE","r,[m]","1",,"0.33",,"MOVBE"
"MOVBE","[m],r","2",,"0.5",,"MOVBE"
"PREFETCHNTA","m","1",,"0.33",,
"PREFETCHT0","m","1",,"0.33",,
"PREFETCHT1/2","m","1",,"1",,
"PREFETCHW","m","1",,"0.33",,"PREFETCHW"
"SFENCE",,"1",,"1",,
"LFENCE",,"1",,"10",,
"MFENCE",,"6",,"~60",,
,,,,,,
"Arithmetic instructions",,,,,,
"ADD, SUB","r,r","1","1","0.25",,
"ADD, SUB","r,i","1","1","0.25",,
"ADD, SUB","r,m","1",,"0.33",,
"ADD, SUB","m,r8/16","2","7-8","1",,
"ADD, SUB","m,r32/64","2","1","1",,"may mirror"
"ADC, SBB","r,r","1","1","1",,
"ADC, SBB","r,i","1","1","1",,
"ADC, SBB","r,m","1","1","1",,
"ADC, SBB","m,r8/16","2","8","1",,
"ADC, SBB","m,r32/64","2","1","1",,"may mirror"
"ADCX ADOX","r,r","1","1","1",,"ADX"
"CMP","r,r","1","1","0.25",,
"CMP","r,i","1","1","0.25",,
"CMP","r,m","1",,"0.33",,
"CMP","m,i","1",,"0.33",,
"INC, DEC, NEG","r","1","1","0.25",,
"INC, DEC, NEG","m32/64","2","1","1",,"may mirror"
"AAA, AAS",,"10","6",,,
"DAA",,"16","8",,,
"DAS",,"20","10",,,
"AAD",,"4","5",,,
"AAM",,"4","13","4",,
"MUL, IMUL","r8/m8","1","3","1",,
"MUL, IMUL","r16/m16","3","3","2",,
"MUL, IMUL","r32/m32","2","3","1",,
"MUL, IMUL","r64/m64","2","3","1",,
"IMUL","r,r","1","3","1",,
"IMUL","r,m","1",,"1",,
"IMUL","r16,r16,i","2","4","1",,
"IMUL","r32,r32,i","1","3","1",,
"IMUL","r64,r64,i","1","3","1",,
"IMUL","r16,m16,i","2",,"1",,
"IMUL","r32,m32,i","1",,"1",,
"IMUL","r64,m64,i","1",,"1",,
"MULX","r,r,r","2","4","1",,"BMI2"
"DIV","r8/m8","1","12","4",,
"DIV","r16/m16","2","12-13","4",,"depends on operand values"
"DIV","r32/m32","2","10-13","6",,
"DIV","r64/m64","2","10-18","7-12",,
"IDIV","r8/m8","1","12","4",,
"IDIV","r16/m16","2","12-13","4",,
"IDIV","r32/m32","2","10-13","6",,
"IDIV","r64/m64","2","10-18","7-12",,
"CBW",,"1","1","0.33",,
"CWDE, CDQE",,"1","1","0.33",,
"CDQ, CQO",,"1","1","0.5",,
"CWD",,"2","1","1",,
,,,,,,
"Logic instructions",,,,,,
"AND, OR, XOR","r,r","1","1","0.25",,
"AND, OR, XOR","r,i","1","1","0.25",,
"AND, OR, XOR","r,m","1",,"0.33",,
"AND, OR, XOR","m,r/i","1","1","0.5",,"may mirror"
"TEST","r,r","1","1","0.25",,
"TEST","r,i","1","1","0.25",,
"TEST","m,r","1",,"0.33",,
"TEST","m,i","1",,"0.33",,
"NOT","r","1","1","0.25",,
"NOT","m","1","1","0.5",,"may mirror"
"ANDN","r,r,r","1","1","0.25",,"BMI1"
"SHL, SHR, SAR","r,i/CL","1","1","0.5",,
"ROL, ROR","r,i/CL","1","1","0.5",,
"RCL","r,1","1","1","1",,
"RCL","r,i","9","4","4",,
"RCL","r,cl","9","4","4",,
"RCR","r,1","1","1","1",,
"RCR","r,i","7","3","3",,
"RCR","r,cl","7","3","3",,
"SHLD, SHRD","r,r,i","4","2","2",,
"SHLD, SHRD","r,r,cl","5","2","2",,
"SHLD, SHRD","m,r,i/CL","6",,,,
"SARX","r,r,r","1","1","0.5",,"BMI2"
"SHLX","r,r,r","1","1","0.5",,"BMI2"
"SHRX","r,r,r","1","1","0.5",,"BMI2"
"RORX","r,r,i","1","1","0.5",,"BMI2"
"BT","r,r/i","1","1","0.5",,
"BT","m,i","2",,"0.5",,
"BT","m,r","7",,"3",,
"BTC, BTR, BTS","r,r/i","2","2","1",,
"BTC, BTR, BTS","m,i","4",,"2",,
"BTC, BTR, BTS","m,r","9",,"3",,
"BSF","r,r","1","1","0.25",,
"BSF","r,m","1",,"0.33",,
"BSR","r,r","1","1","0.25",,
"BSR","r,m","1",,"0.33",,
"SETcc","r","1","1","0.5",,
"SETcc","m","2",,"1",,
"CLC",,"1",,"0.17",,
"STC",,"1",,"0.25",,
"CMC",,"1","1","1",,
"CLD",,"1",,"3",,
"STD",,"1",,"4",,
"POPCNT","r,r","1","1","0.25",,"SSE4.2"
"LZCNT","r,r","1","1","0.25",,"LZCNT"
"TZCNT","r,r","1","1","0.25",,"BMI1"
"BEXTR","r,r,r","1","1","0.5",,"BMI1"
"BLSI","r,r","1","1","0.25",,"BMI1"
"BLSMSK","r,r","1","1","0.25",,"BMI1"
"BLSR","r,r","1","1","0.25",,"BMI1"
"PDEP","r,r,r","1","3","1",,"BMI2"
"PEXT","r,r,r","1","3","1",,"BMI2"
"BZHI","r,r,r","1","1","0.5",,"BMI2"
,,,,,,
"Control transfer instructions",,,,,,
"JMP","short/near","1",,"1",,"more if > 3 jmp per 16 bytes"
"JMP","r","1",,"1",,
"JMP","m","2",,"1",,
"Jcc","short/near","1",,"0.5-2",,"0.5 predicted not taken. 1 predicted taken. Higher if mispredicted"
"fused CMP+Jcc","short/near","1",,"0.5-2",,
"J(E/R)CXZ","short","1",,"0.5-2",,
"LOOP","short","1",,"0.5-2",,
"LOOPE LOOPNE","short","1",,"0.5-2",,
"CALL","near","2",,"2",,
"CALL","r","2",,"2",,
"CALL","m","4",,"2",,
"RET",,"2",,"2",,
"RET","i","3",,"2",,
"BOUND","m","13",,"4",,"for no jump"
"INTO",,"4",,"2",,"for no jump"
,,,,,,
"String instructions",,,,,,
"LODS",,"4",,"3",,
"REP LODS","m","7n",,"2n",,
"STOS",,"3",,"3",,
"REP STOS",,"<1",,"<1",,"small n"
"REP STOS",,"1 per 16B",,"0.5 per 16B",,"best case"
"MOVS",,"5",,"3",,
"REP MOVS",,"< 1n",,"< 1n",,"small n"
"REP MOVS",,"1 pr 16B",,"0.5 per 16B",,"best case"
"SCAS",,"4",,"3",,
"REP SCAS",,"8n",,"2n",,
"CMPS",,"6",,"3",,
"REP CMPS",,"10n",,"3n",,
,,,,,,
"Synchronization",,,,,,
"LOCK ADD","m,r","2","~8",,,
"XADD","m,r","4","8",,,
"LOCK XADD","m,r","4","8",,,
"CMPXCHG","m,r8","5","9",,,
"CMPXCHG","m,r16/32/64","6","9",,,
"LOCK CMPXCHG","m,r","5","9",,,
"CMPXCHG8B","m64","15","10",,,
"LOCK CMPXCHG8B","m64","15","10",,,
"CMPXCHG16B","m128","26","15",,,
"LOCK CMPXCHG16B","m128","26","15",,,
,,,,,,
"Other",,,,,,
"NOP (90)",,"0-1",,"0.08",,"may fuse"
"Long NOP (0F 1F)",,"0-1",,"0.08",,"may fuse"
"PAUSE",,"8",,"~65",,
"ENTER","a,0","12",,"19",,
"ENTER","a,b","11+3b",,"20+b",,
"LEAVE",,"2",,"3",,
"CPUID",,"43-112",,"140-170",,
"XGETBV",,"56",,"48",,
"RDTSC",,"46",,"34",,
"RDTSCP",,"46",,"64",,"rdtscp"
"RDPMC ",,"27",,"22",,
"CRC32","r,r","1","3","1",,
"RDRAND ","r","58",,"65",,
"RDSEED","r16/32","25",,"~42000",,
"RDSEED","r64","35",,"~85000",,
,,,,,,
"Floating point x87 instructions",,,,,,
"Instruction","Operands","Ops","Latency","Reciprocal throughput","Execution pipes","Notes"
"Move instructions",,,,,,
"FLD","r","1","1","0.5","P01",
"FLD","m32/64","1","7","0.5","P23",
"FLD","m80","10","9","16",,
"FBLD","m80","25","34","26",,
"FST(P)","r","1","1","0.5","P01",
"FST(P)","m32/64","2","6","1","P01",
"FSTP","m80","17","8","5",,
"FBSTP","m80","288","186","192",,
"FXCH","r","1","0","0.25","P0123",
"FILD","m","1","13","1","P0",
"FIST(T)(P)","m","2","7","1","P01",
"FLDZ, FLD1",,"1",,"1","P1",
"FCMOVcc","st0,r","7","4","3",,
"FFREE","r","1","0","0.25",,
"FINCSTP, FDECSTP",,"1","0","0.25",,
"FNSTSW","AX","3",,"19",,
"FNSTSW","m16","2",,"15",,
"FLDCW","m16","1",,"2","P0",
"FNSTCW","m16","2",,"2",,
,,,,,,
"Arithmetic instructions",,,,,,
"FADD(P),FSUB(R)(P)","r/m","1","7","2","P01",
"FIADD,FISUB(R)","m","2",,"1","P01 P23",
"FMUL(P)","r/m","1","7","2","P01",
"FIMUL","m","2",,"2",,
"FDIV(R)(P)","r","1","15","6","P01",
"FDIV(R)","m","1",,"6",,
"FIDIV(R)","m","2",,"6",,
"FABS, FCHS",,"1","1","0.5","P01",
"FCOM(P), FUCOM(P)","r/m","1",,"1","P01",
"FCOMPP, FUCOMPP",,"1",,"1",,
"FCOMI(P)","r","2","11","1",,
"FICOM(P)","m","2",,"1",,
"FTST",,"1",,"1","P01",
"FXAM",,"1",,"0.5","P01",
"FRNDINT",,"1","5","1","P01",
"FPREM FPREM1",,"2","24-70","14-50",,
,,,,,,
"Math",,,,,,
"FSQRT",,"1","25","10",,
"FLDPI, etc.",,"1",,"1",,
"FSIN",,"12-60","50-200",,"P0 P1",
"FCOS",,"18-60","60-150",,"P0 P1",
"FSINCOS",,"12-100","80-150",,"P0 P1",
"FPTAN",,"10-60","60-120",,"P0 P1",
"FPATAN",,"10-100","50-190",,"P0 P1",
"FSCALE",,"8","11","4","P0 P1",
"FXTRACT",,"13","12","5","P0 P1",
"F2XM1",,"10-18","50-60",,"P0 P1",
"FYL2X",,"10-60","40-60",,"P0 P1",
"FYL2XP1",,"70","~170",,"P0 P1",
,,,,,,
"Other",,,,,,
"FNOP",,"1",,"0.25",,
"(F)WAIT",,"1",,"0.25",,
"FNCLEX",,"21",,"49",,
"FNINIT",,"35",,"100",,
"FNSAVE","m864","102",,"~155",,
"FRSTOR","m864","79",,"143",,
,,,,,,
"Integer vector instructions",,,,,,
"Instruction","Operands","Ops","Latency","Reciprocal throughput","Execution pipes","Notes"
"Move instructions",,,,,,
"MOVD","r32, mm","1","3","1",,
"MOVD","mm, r32","2","4","1",,
"MOVD/Q","r32/64, x","1","3","1",,
"MOVD/Q","x, r32/64","2","4","1","P13",
"MOVD","mm/x,m32","1","5","0.5",,
"MOVD","m32,mm/x","1","4","1",,
"MOVQ","mm/x,mm/x","1","1","0.25",,
"MOVQ","mm/x,m64","1","5","0.5",,
"MOVQ","m64,mm/x","1","4","1",,
"MOVDQA/U","v,v","1","0","0.17","none","renaming"
"MOVDQA/U","x,m128","1","5","0.5",,
"MOVDQA/U","m128,x","1","4","1",,
"VMOVDQA/U","y,m256","1","5","0.5",,
"VMOVDQA/U","m256,y","1","6","1",,
"VMOVDQA/U","z,m512","1","6","1",,
"VMOVDQA/U","m512,z","2","6","2",,
"LDDQU","x,m","1","5","0.5",,
"MOVDQ2Q","mm,x","1","1","0.25","P0123",
"MOVQ2DQ","x,mm","2","1","0.5",,
"MOVNTQ","m,mm","1","~1000","1",,
"MOVNTDQ","m,x","1","~1000","1",,
"VMOVNTDQ","m,y","1","~1000","1",,
"MOVNTDQA","xy,m","1","5","0.5",,
"MOVNTDQA","z,m","1","6","1",,
"PACKSS/USWB/DW","xy,r","1","2","0.5","P12",
"PACKSS/USWB/DW","z,r","1","2","1","P12",
"PUNPCKH/LBW/WD/DQ","xy,r","1","1","0.33","P123",
"PUNPCKH/LBW/WD/DQ","z,r","1","1","0.67","P123",
"PUNPCKL/HQDQ","xy,r","1","1","0.33","P123",
"PSHUFB","xy,r/m","1","2","0.5","P12",
"PSHUFB","z,r/m","1","2","1","P12",
"PSHUFD","xy,xy,i","1","1","0.33","P123",
"PSHUFD","z,z,i","1","1","0.67","P123",
"PSHUFW","mm,mm,i","1","1","0.33","P123",
"PSHUFL/HW","xy,xy,i","1","1","0.33","P123",
"PSHUFL/HW","z,z,i","1","1","0.67","P123",
"VSHUFI32X4","z,z,z,i","1","4","1","P12",
"VSHUFI64X2","z,z,z,i","1","4","1","P12",
"VPSHUFBITQMB","k,x,x","1","3","0.5","P01","avx512bitalg"
"VPSHUFBITQMB","k,yz,yz","1","4","0.5","P01","avx512bitalg"
"PALIGNR","xy,xy,i","1","2","0.5","P12",
"PALIGNR","z,z,i","1","2","1","P12",
"VALIGND","x,x,x,i","1","2","0.5","P12",
"VALIGND","y,y,y,i","1","4","0.5","P12",
"VALIGND","z,z,z,i","1","5","1","P12",
"VALIGNQ","x,x,x,i","1","2","0.5","P12",
"VALIGNQ","y,y,y,i","1","3","0.5","P12",
"VALIGNQ","z,z,z,i","1","4","1","P12",
"PBLENDVB","x,x,xmm0","1","1","0.5","P12",
"VPBLENDVB","xy,xy,xy,xy","1","1","0.5","P12",
"PBLENDW","xy,xy,i","1","1","0.25","P0123",
"VPBLENDD","xy,xy,xy,i","1","1","0.25","P0123",
"VPBLENDM B/W/D/Q","v{k},v,v","1","1","0.5",,
"VPERMW","z,z,z","1","5","1","P12",
"VPERMD","xy,xy,xy","1","4","0.5","P12",
"VPERMD","z,z,z","1","5","1","P12",
"VPERMQ","xy,xy,i","1","4","0.5","P12",
"VPERMQ","z,z,i","1","5","1","P12",
"VPERMQ","z,z,z","1","5","1","P12",
"VPERM2I128","y,y,y,i","1","3","0.5","P12",
"VPERMI2 B/W/D/Q","x,x,x","1","3","0.5","P12",
"VPERMI2 B/W/D/Q","y,y,y","1","4","0.5","P12",
"VPERMI2 B/W/D/Q","z,z,z","1","5","1","P12",
"VPERMT2 B/W/D/Q","x,x,x","1","3","0.5","P12",
"VPERMT2 B/W/D/Q","y,y,y","1","4","0.5","P12",
"VPERMT2 B/W/D/Q","z,z,z","1","5","1","P12",
"VEXTRACTI128","x,y,i","1","3","0.5","P12",
"VEXTRACTI128","m,y,i","2",,"1","P12",
"VINSERTI128","y,x,i","1","3","0.5","P12",
"VINSERTI128","y,m,i","2",,"0.5","P12",
"MASKMOVQ","mm,mm","40","~1000","9",,
"MASKMOVDQU","x,x","75","~1000","18",,
"VPMASKMOVD","v,v,m","1","7","0.5","P01",
"VPMASKMOVD","m,v,v","19","20-30","6","P3",
"VPMASKMOVQ","v,v,m","1","6","0.5","P01",
"VPMASKMOVQ","m,v,v","18","30-70","4","P3",
"PMOVMSKB","r32,mm","1","3","1",,
"PMOVMSKB","r32,x","1","3","1",,
"VPMOVMSKB","r32,y","1","3","1",,
"PEXTRB/W/D/Q","r,x/mm,i","2","4","1","P12",
"VEXTRACTI128","x,y,i","1","3","0.5","P12",
"PINSRB/W/D/Q","x/mm,r,i","2","4","1","P1",
"VINSERTI128","y,y,x,i","1","1","0.5","P12",
"VINSERTI32X4","z,z,x,i","1","1","1","P12",
"VINSERTI64X4","z,z,y,i","1","1","1","P12",
"EXTRQ","x,i,i","2","3","0.5","P12","AMD SSE4A"
"EXTRQ","x,x","1",,"0.5","P12","AMD SSE4A"
"INSERTQ","x,x,i,i","2",,"0.5","P12","AMD SSE4A"
"INSERTQ","x,x","1",,"0.5","P12","AMD SSE4A"
"PMOVSXBW/BD/BQ/WD/WQ/DQ","xy,xy","1","2","0.5","P12",
"PMOVZXBW/BD/BQ/WD/WQ/DQ","xy,xy","1","2","0.5","P12",
"VPBROADCAST
B/W/D/Q","x,x","1","1","0.33","P123","AVX2"
"VPBROADCAST
B/W/D/Q","x,m","1",,"0.5",,"AVX2"
"VPBROADCAST
B/W/D/Q","y,x","1","1","0.5","P12","AVX2"
"VPBROADCAST
B/W/D/Q","y,m","1",,"0.5",,"AVX2"
"VBROADCASTI128","y,m128","1","5","0.5",,"AVX2"
"VPCOMPRESSB/W/D/Q","x{k},x","1","2","2",,"AVX512VBMI2"
"VPCOMPRESSB/W/D/Q","y{k},y","1","4","4",,"AVX512VBMI2"
"VPCOMPRESSB/W/D/Q","z{k},z","1","5","5",,"AVX512VBMI2"
"VPEXPANDB/W/D/Q","x{k},x","1","2","2",,"AVX512VBMI2"
"VPEXPANDB/W/D/Q","y{k},y","1","4","4",,"AVX512VBMI2"
"VPEXPANDB/W/D/Q","z{k},z","1","5","5",,"AVX512VBMI2"
"VPGATHERDD","x,[r+s*x],x","24",,"5","P0123","AVX2"
"VPGATHERDD","y,[r+s*y],y","42",,"8",,
"VPGATHERDQ","x,[r+s*x],x","18",,"4",,
"VPGATHERDQ","y,[r+s*x],y","24",,"5",,
"VPGATHERQD","x,[r+s*x],x","18",,"4",,
"VPGATHERQD","x,[r+s*y],x","24",,"5",,
"VPGATHERQQ","x,[r+s*x],x","18",,"4",,
"VPGATHERQQ","y,[r+s*y],y","24",,"5",,
"VPGATHERDD","x{k},[r+s*x]","24",,"5",,"AVX512VL"
"VPGATHERDD","y{k},[r+s*y]","41",,"9",,
"VPGATHERDD","z{k},[r+s*z]","81",,"17",,
"VPGATHERDQ","x{k},[r+s*x]","17",,"4",,
"VPGATHERDQ","y{k},[r+s*x]","24",,"5",,
"VPGATHERDQ","z{k},[r+s*y]","46",,"9",,
"VPGATHERQD","x{k},[r+s*x]","18",,"4",,
"VPGATHERQD","x{k},[r+s*y]","24",,"5",,
"VPGATHERQD","y{k},[r+s*z]","46",,"9",,
"VPGATHERQQ","x{k},[r+s*x]","17",,"4",,
"VPGATHERQQ","y{k},[r+s*y]","24",,"5",,
"VPGATHERQQ","z{k},[r+s*z]","48",,"10",,
"VPSCATTERDD","[r+s*x]{k},x","27",,"6",,
"VPSCATTERDD","[r+s*y]{k},y","48",,"13",,
"VPSCATTERDD","[r+s*z]{k},z","89",,"24",,
"VPSCATTERDQ","[r+s*x]{k},x","17",,"4",,
"VPSCATTERDQ","[r+s*x]{k},y","28",,"7",,
"VPSCATTERDQ","[r+s*y]{k},z","48",,"9",,
"VPSCATTERQD","[r+s*x]{k},x","17",,"4",,
"VPSCATTERQD","[r+s*y]{k},x","27",,"6",,
"VPSCATTERQD","[r+s*z]{k},y","48",,"12",,
"VPSCATTERQQ","[r+s*x]{k},x","17",,"4",,
"VPSCATTERQQ","[r+s*y]{k},y","27",,"7",,
"VPSCATTERQQ","[r+s*z]{k},z","48",,"12",,
,,,,,,
"Arithmetic instructions",,,,,,
"PADD/SUBB/W/D/Q","xy,xy","1","1","0.25","P0123",
"PADD/SUBB/W/D/Q","z,z","1","1","0.5","P0123",
"PADD/SUBB/W/D/Q","v,m","1",,"0.5",,
"PADD/SUB(U)SB/W","xy,xy","1","2","0.5","P01",
"PHADD/SUB(S)W/D","mm,mm","3","2","2",,
"PHADD/SUB(S)W/D","x,x","4","2","2",,
"VPHADD/SUB(S)W/D","y,y,y","3","2","2",,
"PCMPEQ/GT B/W/D","v,v","1","1","0.25","P0123",
"PCMPEQ/GT Q","v,v","1","2","0.5","P01",
"VPCMPEQ/GT B/W/D/Q","k,x,x","1","3","0.5","P01",
"VPCMPEQ/GT B/W/D/Q","k,y,y","1","4","0.5","P01",
"VPCMPEQ/GT B/W/D/Q","k,z,z","1","5","1","P01",
"PMULLW PMULHW PMULHUW PMULLD PMULDQ PMULUDQ","xy,xy","1","3","0.5","P01",
"PMULLW PMULHW PMULHUW PMULLD PMULDQ PMULUDQ","z,z,z","1","3","1","P01",
"PMULHRSW","xy,xy","1","3","0.5","P01",
"PMULHRSW","z,z,z","1","3","1","P01",
"PMADDWD/UBSW","xy,xy","1","3","0.5","P01",
"PMADDWD/UBSW","z,z,z","1","3","1","P01",
"PAVGB/W","xy,xy","1","2","0.25","P0123",
"PAVGB/W","z,z,z","1","2","0.5","P0123",
"PMIN/MAX SB/SW/ SD UB/UW/UD","xy,xy","1","1","0.25","P0123",
"PMIN/MAX SB/SW/ SD UB/UW/UD","z,z,z","1","1","0.5","P0123",
"VPMIN/MAX SQ/UQ","xy,xy,xy","1","2","0.5","P01",
"VPMIN/MAX SQ/UQ","z,z,z","1","2","1","P01",
"PHMINPOSUW","x,x","1","3","0.5","P12",
"PABSB/W/D","xy,xy","1","2","0.5","P01",
"VPABSB/W/D","z,z,z","1","2","1","P01",
"PSIGNB/W/D","xy,xy","1","2","0.5","P01",
"PSADBW","xy,xy","1","3","0.5","P01",
"VPSADBW","z,z,z","1","3","1","P01",
"MPSADBW","x,x,i","4","5","2","P012",
"VMPSADBW","y,y,y,i","3","5","2","P012",
"VPOPCNTB/W","xy,xy","1","2","0.5","P01","avx512bitalg"
"VPOPCNTD/Q","xy,xy","1","2","0.5","P01","avx512vpopcntdq"
"VPOPCNTB/W/D/Q","z,z","1","2","1","P01",
"VPMADD52H/L UQ","xy,xy,xy","1","4","0.5","P01","avx512ifma"
"VPMADD52H/L UQ","z,z,z","1","4","1","P01","avx512ifma"
"VPDPBUSD(S)","xy,xy,xy","1","4","0.5","P01","avx512vnni"
"VPDPBUSD(S)","z,z,z","1","4","1","P01","avx512vnni"
"VPDPWSSD(S)","xy,xy,xy","1","4","0.5","P01","avx512vnni"
"VPDPWSSD(S)","z,z,z","1","4","1","P01","avx512vnni"
,,,,,,
"Logic",,,,,,
"PAND PANDN POR PXOR","xy,xy","1","1","0.25","P0123",
"VPAND PANDN POR PXOR","z,z,z","1","1","0.5","P0123",
"PTEST","xy,xy","2",,"1","P12",
"VPTESTMB/W/D/Q","k,x,x","1","3","0.5","P01",
"VPTESTMB/W/D/Q","k,y,y","1","4","0.5","P01",
"VPTESTMB/W/D/Q","k,z,z","1","5","1","P01",
"PSLL/RL W/D/Q PSRAW/D","xy,xy","2","1","0.5","P12",
"VPSLL/RL W/D/Q VPSRAW/D","z,z,z","2","1","1","P12",
"VPSLL/RL W/D/Q VPSRAW/D","xy,xy,i","1","1","0.5","P23",
"VPSLL/RL W/D/Q VPSRAW/D","z,z,i","1","1","1","P23",
"PSLLDQ, PSRLDQ","xy,xy,i","2","1","0.5","P12",
"PSLLDQ, PSRLDQ","z,z,i","2","1","1","P12",
"VPSLLVD/Q
VPSRAVD
VPSRLVD/Q","xy,xy,xy","1","1","0.5","P23","AVX2"
"VPSLLVD/Q
VPSRAVD
VPSRLVD/Q","z,z,z","1","1","1","P23","AVX2"
"VPSHL/R DW/D/Q","xy,xy,xy,i","1","2","0.5","P01","avx512vbmi2"
"VPSHL/R DW/D/Q","z,z,z,i","1","2","1","P01","avx512vbmi2"
"VPSHLDVW/D/Q","xy,xy,xy,i","1","2","0.5","P01","avx512vbmi2"
"VPSHLDVW/D/Q","z,z,z,i","1","2","1","P01","avx512vbmi2"
"VPMULTISHIFTQB","xy,xy,xy","1","3","0.5","P01","avx512vbmi"
"VPMULTISHIFTQB","z,z,z","1","3","1","P01","avx512vbmi"
"VPROL/R D/Q","xy,xy,i","1","3","0.5","P01",
"VPROL/R D/Q","z,z,i","1","3","1","P01",
"VPROL/R V D/Q","xy,xy,xy","1","3","0.5","P01",
"VPROL/R V D/Q","z,z,z","1","3","1","P01",
"VPLZCNT D/Q","xy,xy","1","2","0.5","P01",
"VPLZCNT D/Q","z,z","1","2","1","P01",
"VPTERNLOG D/Q","xy,xy,xy","1","1","0.5","P0123",
"VPTERNLOG D/Q","z,z,z","1","1","1","P0123",
,,,,,,
"String instructions",,,,,,
"PCMPESTRI","x,x,i","8","3","3",,"SSE4.2"
"PCMPESTRI","x,m,i","12",,"4",,"SSE4.2"
"PCMPESTRM","x,x,i","7","7","7",,"SSE4.2"
"PCMPESTRM","x,m,i","12",,"4",,"SSE4.2"
"PCMPISTRI","x,x,i","4","2","2",,"SSE4.2"
"PCMPISTRI","x,m,i","4",,"3",,"SSE4.2"
"PCMPISTRM","x,x,i","3","7","7",,"SSE4.2"
"PCMPISTRM","x,m,i","4",,"3",,"SSE4.2"
,,,,,,
"Encryption",,,,,,
"PCLMULQDQ","xy,xy,i","4","4","2","P023","pclmul"
"VPCLMULQDQ","z,z,z,i","4","4","2",,"pclmul"
"AESDEC","xy,xy","1","4","0.5","P01","aes"
"VAESDEC","z,z,z","1","4","1","P01","aes"
"AESDECLAST","xy,xy","1","4","0.5","P01","aes"
"VAESDECLAST","z,z,z","1","4","1","P01","aes"
"AESENC","x,x","1","4","0.5","P01","aes"
"VAESENC","xy,xy,xy","1","4","0.5","P01","aes"
"VAESENC","z,z,z","1","4","1","P01","aes"
"AESENCLAST","x,x","1","4","0.5","P01","aes"
"VAESENCLAST","xy,xy,xy","1","4","0.5","P01","aes"
"VAESENCLAST","z,z,z","1","4","1","P01","aes"
"AESIMC","xy,xy","1","4","0.5","P01","aes"
"VAESIMC","z,z,z","1","4","1","P01","aes"
"AESKEYGENASSIST","x,x,i","1","4","0.5","P01","aes"
"SHA1RNDS4","x,x,i","1","6","2","P01","sha"
"SHA1NEXTE","x,x","1","2","0.5","P01","sha"
"SHA1MSG1","x,x","2","2","0.5","P0123","sha"
"SHA1MSG2","x,x","1","2","0.5","P12","sha"
"SHA256RNDS2","x,x","1","4","2","P01","sha"
"SHA256MSG1","x,x","2","3","0.5","P0123","sha"
"SHA256MSG2","x,x","4","5","2","P0123","sha"
,,,,,,
"Other",,,,,,
"EMMS",,"1",,"0.25",,
"VGF2P8AFFINEINVQB","v,v,v,i","1","3","0.5-1","P01","avx512gfni"
"VGF2P8AFFINEQB","v,v,v,i","1","3","0.5-1","P01","avx512gfni"
"VGF2P8MULB","v,v,v","1","3","0.5-1","P01","avx512gfni"
"VPCONFLICTD/Q","x,x","1","2","0.5","P01","avx512cd"
"VPCONFLICTD/Q","y,y","2","6","0.67","P012","avx512cd"
"VPCONFLICTD/Q","z,z","2","6","1.33","P012","avx512cd"
,,,,,,
,,,,,,
"Floating point XMM and YMM instructions",,,,,,
"Instruction","Operands","Ops","Latency","Reciprocal throughput","Execution pipes","Notes"
"Move instructions",,,,,,
"MOVAPS/D","v,v","1","0","0.17","none","renaming"
"MOVUPS/D","v,v","1","0","0.17","none","renaming"
"MOVAPS/D MOVUPS/D","x,m128","1","5","0.5",,
"MOVAPS/D MOVUPS/D","m128,x","1","4","1",,
"VMOVAPS/D VMOVUPS/D","y,m256","1","5","0.5",,
"VMOVAPS/D VMOVUPS/D","m256,y","1","5","1",,
"VMOVAPS/D VMOVUPS/D","z,m512","1","6","1",,
"VMOVAPS/D VMOVUPS/D","m512,z","2","6","2",,
"MOVSS/D","x,x","1","1","0.25","P0123",
"MOVSS/D","x,m32/64","1","5","0.5",,
"MOVSS/D","m32/64,x","1","4","1",,
"MOVHPS/D","x,m64","1","5","0.5","P123",
"MOVHPS/D","m64,x","2","6","1",,
"MOVLPS/D","x,m64","1","5","0.5","P0123",
"MOVLPS/D","m64,x","1","5","1",,
"MOVLHPS MOVHLPS","x,x","1","1","0.5","P12",
"MOVMSKPS/D","r32,x","1","3","1",,
"VMOVMSKPS","r32,y","1","4","1",,
"VMOVMSKPD","r32,y","1","3","1",,
"MOVNTPS/D","m,xy","1","~1000","1",,
"MOVNTPS/D","m,z","2","~1000",,,
"SHUFPS/D","xy,xy,i","1","1","0.33","P123",
"VSHUFPS/D","z,z,i","1","1","0.67","P123",
"VSHUFF32X4","z,z,z,i","1","4","1","P12",
"VPERMILPS/PD","xy,xy,xy","1","2","0.5","P12",
"VPERMILPS/PD","z,z,z","1","2","1","P12",
"VPERMILPS/PD","xy,xy,i","1","1","0.33","P123",
"VPERMILPS/PD","z,z,i","1","1","0.67","P123",
"VPERM2F128","y,y,y/m,i","1","3","0.5","P12",
"VPERMPS/PD","y,y,y","1","4","0.5","P12",
"VPERMPS/PD","z,z,z","1","5","1",,
"VPERMI/T 2PS/PD","x,x,x","1","3","0.5","P12",
"VPERMI/T 2PS/PD","y,y,y","1","4","0.5","P12",
"VPERMI/T 2PS/PD","z,z,z","1","5","1","P12",
"BLENDPS/PD","xy,xy,i","1","1","0.25","P0123",
"BLENDVPS/PD","x,x/m,xmm0","1","1","0.5","P01",
"VBLENDVPS/PD","y,y,y,y","1","1","0.5","P01",
"VBLENDMPS","xy{k},xy,xy","1","1","0.25","P0123",
"VBLENDMPS","z{k},z,z","1","1","0.5","P0123",
"MOVDDUP","xy,xy","1","1","0.33","P123",
"MOVDDUP","x,m64","1","17","0.5",,
"VMOVDDUP","y,m256","1",,"0.5",,
"VBROADCASTSS/D","x,x","1","1","0.33","P123",
"VBROADCASTSS/D","y,x","1","1","0.5","P12",
"VBROADCASTSS/D","z,x","1","1","1","P12",
"VBROADCASTSS/D","xy,m","1","5","0.5","P12",
"VBROADCASTSS/D","z,m","1","6","1","P12",
"VBROADCASTF128","y,m128","1","5","0.5","P12",
"VBROADCASTF32X4/64x2","z,m","1","6","1","P12",
"MOVSH/LDUP","xy,xy","1","1","0.33","P123",
"VMOVSH/LDUP","z,z","1","1","0.67","P123",
"UNPCKH/LPS/D","xy,xy","1","1","0.33","P123",
"UNPCKH/LPS/D","z,z","1","1","0.67","P123",
"EXTRACTPS","r32,x,i","2","4","1","P12",
"EXTRACTPS","m32,x,i","2","5","1",,
"VEXTRACTF128","x,y,i","1","3","0.5","P12",
"VEXTRACTF128","m128,y,i","2","7","1","P12",
"VEXTRACTF32X4/64x2","x,z,i","1","4","1","P12",
"VEXTRACTF32X4/64x2","m128,z,i","2","8","1","P12",
"VEXTRACTF32X8","y,z","1","4","1","P12",
"VEXTRACTF32X8","m256,z,i","2","9","1","P12",
"INSERTPS/PD","x,x,i","1","1","0.33","P123",
"INSERTPS/PD","x,m32,i","1","5","0.5","P123",
"VINSERTF128","y,y,x,i","1","1","0.5","P12",
"VINSERTF128","y,y,m128,i","1","6","0.5","P01",
"VINSERTF32x4","z,z,x,i","1","1","0.5","P12",
"VINSERTF32x4","z,z,m128,i","1","6","0.5","P12",
"VINSERTF64x4","z,z,y,i","1","1","1","P12",
"VINSERTF64x4","z,z,m256,i","1","8","1","P12",
"VMASKMOVPS/D","x,x,m","1","6","0.5","P01",
"VMASKMOVPS/D","y,y,m","1","7","0.5","P01",
"VMASKMOVPS/D","m128,x,x","18","18","6",,
"VMASKMOVPS/D","m256,y,y","42","22","12",,
"VCOMPRESSPS/PD","x{k},x","2","2","2",,
"VCOMPRESSPS/PD","y{k},y","2","4","4",,
"VCOMPRESSPS/PD","z{k},z","2","5","5",,
"VEXPANDPS/PD","x{k},x","2","2","2",,
"VEXPANDPS/PD","y{k},y","2","4","4",,
"VEXPANDPS/PD","z{k},z","2","5","5",,
"VGATHERDPS","x,[r+s*x],x","24",,"5","P0123",
"VGATHERDPS","y,[r+s*y],y","42",,"8",,
"VGATHERDPD","x,[r+s*x],x","18",,"4",,
"VGATHERDPD","y,[r+s*x],y","24",,"5",,
"VGATHERQPS","x,[r+s*x],x","18",,"4",,
"VGATHERQPS","x,[r+s*y],x","24",,"5",,
"VGATHERQPD","x,[r+s*x],x","18",,"4",,
"VGATHERQPD","y,[r+s*y],y","24",,"5",,
"VGATHERDPS","x{k},[r+s*x]","24",,"5",,
"VGATHERDPS","y{k},[r+s*y]","41",,"9",,
"VGATHERDPS","z{k},[r+s*z]","81",,"17",,
"VGATHERDPD","x{k},[r+s*x]","17",,"4",,
"VGATHERDPD","y{k},[r+s*x]","24",,"5",,
"VGATHERDPD","z{k},[r+s*y]","46",,"9",,
"VGATHERQPS","x{k},[r+s*x]","18",,"4",,
"VGATHERQPS","x{k},[r+s*y]","24",,"5",,
"VGATHERQPS","y{k},[r+s*z]","46",,"9",,
"VGATHERQPD","x{k},[r+s*x]","17",,"4",,
"VGATHERQPD","y{k},[r+s*y]","24",,"5",,
"VGATHERQPD","z{k},[r+s*z]","48",,"10",,
"VSCATTERDPS","[r+s*x]{k},x","27",,"6",,
"VSCATTERDPS","[r+s*y]{k},y","48",,"13",,
"VSCATTERDPS","[r+s*z]{k},z","89",,"22",,
"VSCATTERDPD","[r+s*x]{k},x","17",,"4",,
"VSCATTERDPD","[r+s*x]{k},y","28",,"7",,
"VSCATTERDPD","[r+s*y]{k},z","48",,"9",,
"VSCATTERDPD","[r+s*x]{k},x","17",,"4",,
"VSCATTERDPD","[r+s*y]{k},x","27",,"6",,
"VSCATTERDPD","[r+s*z]{k},y","48",,"12",,
"VSCATTERQPD","[r+s*x]{k},x","17",,"4",,
"VSCATTERQPD","[r+s*y]{k},y","27",,"7",,
"VSCATTERQPD","[r+s*z]{k},z","48",,"12",,
,,,,,,
"Conversion",,,,,,
"CVTPD2PS","x,x","1","3","0.5","P23",
"VCVTPD2PS","x,y","2","5","1","P123",
"VCVTPD2PS","y,z","2","6","1","P123",
"CVTPS2PD","x,x","2","3","1","P123",
"VCVTPS2PD","y,x","2","5","1","P123",
"VCVTPS2PD","z,y","2","6","1","P123",
"CVTSD2SS","x,x","1","3","0.5","P23",
"CVTSS2SD","x,x","1","3","0.5","P23",
"CVTDQ2PS","v,v","1","3","0.5-1","P23",
"CVT(T) PS2DQ","v,v","1","3","0.5-1","P23",
"CVTDQ2PD","x,x","1","3","0.5","P23",
"VCVTDQ2PD","y,x","2","5","0.67","P123",
"VCVT(T)PD2DQ","x,y","2","5","1","P123",
"VCVTDQ2PD","z,y","2","6","1","P123",
"VCVT(T)PD2DQ","y,z","2","7","2","P123",
"VCVT(T)PD2QQ","v,v","1","3","0.5-1","P23",
"VCVTQQ2PD","v,v","1","3","0.5-1","P23",
"VCVT(T)PD2UDQ","x,x","1","3","0.5","P23",
"VCVT(T)PD2UDQ","x,y","2","5","0.67","P123",
"VCVT(T)PD2UDQ","y,z","2","6","1.33","P123",
"VCVTUDQ2PD","x,x","1","3","0.5","P23",
"VCVTUDQ2PD","y,x","2","5","0.67","P123",
"VCVTUDQ2PD","z,y","2","7","1.33","P123",
"VCVT(T)PD2UQQ","v,v","1","3","0.5-1","P23",
"VCVTUQQ2PD","v,v","1","3","0.5-1","P23",
"VCVT(T)PS2QQ","x,x","1","3","0.5","P23",
"VCVT(T)PS2QQ","y,y","2","5","0.67","P123",
"VCVT(T)PS2QQ","z,z","2","6","1.33","P123",
"VCVTQQ2PS","x,x","1","3","0.5","P23",
"VCVTQQ2PS","y,y","2","5","0.67","P123",
"VCVTQQ2PS","z,z","2","7","1.33","P123",
"VCVT(T)PS2UDQ","v,v","1","3","0.5-1","P23",
"VCVTUDQ2PS","v,v","1","3","0.5-1","P23",
"VCVT(T)PS2UQQ","x,x","1","3","0.5","P23",
"VCVT(T)PS2UQQ","y,x","2","5","0.67","P123",
"VCVT(T)PS2UQQ","z,y","2","6","1.33","P123",
"VCVTUQQ2PS","x,x","1","3","0.5","P23",
"VCVTUQQ2PS","x,y","2","5","0.67","P123",
"VCVTUQQ2PS","y,z","2","7","1.33","P123",
"CVTPI2PS","x,mm","2","3","0.5","P0123",
"CVT(T)PS2PI","mm,x","1","4","0.5","P23",
"CVTPI2PD","x,mm","2","4","2","P0123",
"CVT(T) PD2PI","mm,x","1","3","0.5","P23",
"CVTSI2SS","x,r32","2","6","1","P23",
"CVT(T)SS2SI","r32,x","2","6","1","P23",
"CVTSI2SD","x,r32/64","2","6","1","P23",
"CVT(T)SD2SI","r32/64,x","2","6","1","P23",
"CVT(T)SS2USI","r32/64,x","2","6","1","P23",
"CVTUSI2SS","x,r32/64","2","6","1.5","P2 P23",
"CVT(T)SD2USI","r32/64,x","2","6","1","P23",
"CVTUSI2SD","x,r32/64","2","6","1.5","P2 P23",
"VCVTPS2PH","x,x,i","1","3","0.5","P23",
"VCVTPS2PH","x,y,i","2","5","1","P123",
"VCVTPS2PH","y,z,i","2","7","1","P123",
"VCVTPH2PS","x,x","1","3","0.5","P23",
"VCVTPH2PS","y,x","2","5","1","P123",
"VCVTPH2PS","z,y","2","6","1","P123",
"VCVTNE(2)PS2BF16","x,x,x","1","3","0.5","P23","avx512bf16"
"VCVTNE(2)PS2BF16","y,y,y","2","6","0.67","P123","avx512bf16"
"VCVTNE(2)PS2BF16","z,z,z","2","7","1.67","P123","avx512bf16"
,,,,,,
"Arithmetic",,,,,,
"ADDSS/D SUBSS/D","x,x","1","3","0.5","P23",
"ADDPS/D SUBPS/D","xy,xy","1","3","0.5","P23",
"ADDPS/D SUBPS/D","z,z,z","1","3","1","P23",
"ADDSUBPS/D","v,v","1","3","0.5-1","P23",
"HADD/SUBPS/D","x,x","4","4","2","P23",
"VHADD/SUBPS/D","y,y,y","3","4","2","P21",
"MULPS/PD","xy,xy","1","3","0.5","P01",
"VMULPS/PD","z,z,z","1","3","1","P01",
"DIVSS DIVPS","xy,xy","1","11-13","3","P01",
"VDIVPS","z,z,z","1","11-13","6","P01",
"DIVSD DIVPD","xy,xy","1","13","5","P01",
"VDIVPD","z,z,z","1","13","9","P01",
"RCPSS/PS","xy,xy","1","4","0.5","P01",
"VRCP14SS/PS","xy,xy,xy","1","5","0.5","P01",
"VRCP14PS","xy,xy,xy","1","5","1","P01",
"CMPSS/SD/PS/PD","xy,xy","1","2","0.5","P23",
"VCMPPS/PD","k,x,x,i","1","3","0.5","P01",
"VCMPPS/PD","k,y,y,i","1","4","0.5","P01",
"VCMPPS/PD","k,z,z,i","1","5","1","P01",
"(U)COMISS/SD","x,x/m","1","4","1","P23",
"MAX/MIN SS/SD/PS/PD","xy,xy","1","2","0.5","P23",
"MAX/MIN SS/SD/PS/PD","z,z,z","1","2","1","P23",
"VRANGE SS/SD/PS/PD","v,v","1","2","0.5-1","P23",
"ROUNDSS/SD/PS/PD","xy,xy,i","1","3","0.5","P23",
"VRNDSCALESS/PS/SD/PD","v,v","1","3","0.5-1","P23",
"VREDUCE SS/PS/SD/PD","v,v","2","6","1-2","P23",
"DPPS","x,x,i","8","11","4","P0 P12","SSE4.1"
"VDPPS","y,y,y,i","7","11","4","P0 P12",
"DPPD","x,x,i","3","7","3","P0 P23","SSE4.1"
"VDPBF16PS","v,v,v","1","6","3","P01","AVX512BF16"
"VDBPSADBW","v,v,v","2","4","1","P0123",
"VFIXUPIMM SS/SD/PS/PD","v,v,v","1","2","1","P01",
"VFPCLASS SS/SD","k,x,i","1","3","0.5","P01",
"VFPCLASS PS/PD","k,x,i","1","3","0.5","P01",
"VFPCLASS PS/PD","k,y,i","1","4","0.5","P01",
"VFPCLASS PS/PD","k,z,i","1","5","1","P01",
"VFMADD...PS/PD","xy,xy,xy","1","4","0.5","P01","FMA3"
"VFMADD...PS/PD","z,z,z","1","4","1","P01",
,,,,,,
"Math",,,,,,
"SQRTSS/PS","xy,xy","1","15","5","P01",
"VSQRTPS","z,z","1","15","10","P01",
"SQRTSD/PD","xy,xy","1","21","8","P01",
"VSQRTPD","z,z","1","21","16","P01",
"RSQRTSS/PS","xy,xy","1","4","0.5","P01",
"VRSQRTPS","y,y","1","2","0.5","P01",
"VRSQRT14PS","x,x","1","5","0.5","P01",
"VRSQRT14PS","y,y","1","2","0.5","P01",
"VRSQRT14PS","z,z","1","2","1","P01",
"VGETEXP SS/SD/PS/PD","v,v","1","3","0.5-1","P23",
"VGETMANT SS/SD/PS/PD","v,v","1","3","0.5-1","P23",
"VSCALEF SS/SD/PS/PD","v,v,v","2","6","1-2","P23",
,,,,,,
"Logic",,,,,,
"AND(N)/OR/XORPS/PD","xy,xy","1","1","0.25","P0123",
"AND(N)/OR/XORPS/PD","z,z,z","1","1","0.5","P0123",
,,,,,,
"Other",,,,,,
"VZEROUPPER",,"1",,"1",,
"VZEROALL",,"10",,"4",,"32 bit mode"
"VZEROALL",,"18",,"6",,"64 bit mode"
"LDMXCSR","m32","6","13","21",,
"STMXCSR","m32","2","13","15",,
"FXSAVE","m4096","110",,"76",,"32 bit mode"
"FXSAVE","m4096","118",,"85",,"64 bit mode"
"FXRSTOR","m4096","173",,"200",,"32 bit mode"
"FXRSTOR","m4096","162",,"200",,"64 bit mode"
"XSAVE","m","277",,"150",,"32 bit mode"
"XSAVE","m","339",,"192",,"64 bit mode"
"XSAVEOPT","m","204",,"123",,"32 bit mode"
"XSAVEOPT","m","247",,"140",,"64 bit mode"
"XRSTOR","m","416",,"452",,"32 bit mode"
"XRSTOR","m","416",,"440",,"64 bit mode"
"XSAVEC","m","623",,"600",,"32 bit mode"
"XSAVEC","m","247",,"166",,"64 bit mode"
,,,,,,
"Mask register instructions",,,,,,
"Instruction","Operands","Ops","Latency","Reciprocal throughput","Execution pipes","Notes"
"Move instructions",,,,,,
"KMOVB/W/D","k,k","1","1","0.5","P23",
"KMOVQ","k,k","1","1","1","P23",
"KMOVB/W/D","k,m","2","6","0.5",,
"KMOVQ","k,m","2","7","1",,
"KMOVB/W/D/Q","m,k","1","6","1","P01",
"KMOVB/W/D/Q","k,r","2","5","1","P1",
"KMOVB/W/D","r,k","1","4","1",,
"KMOVQ","r,k","1","5","1",,
"VPBROADCASTMB2Q","v,k","1","2","0.5","P01",
"VPBROADCASTMW2D","v,k","1","2","0.5","P01",
"KUNPCKBW","k,k,k","1","1","0.5","P23",
"KUNPCKWD","k,k,k","1","1","0.5","P23",
"KUNPCKDQ","k,k,k","1","1","1","P23",
"VPMOVM2 B/W/D/Q","v,k","1","2","0.25","P0123",
"VPMOVB/W/D/Q 2M","k,x","1","2","0.5","P01",
"VPMOVB/W/D/Q 2M","k,y","1","3","0.5","P01",
"VPMOVB2M","k,z","1","3","0.5","P01",
"VPMOVW/D/Q 2M","k,z","1","4","0.5","P01",
,,,,,,
"Arithmetic and logic instructions",,,,,,
"KADDB/W/D","k,k,k","1","1","0.5","P23",
"KADDQ","k,k,k","1","1","1","P23",
"KSHIFTLB/W/D","k,k,i","1","1","0.5","P23",
"KSHIFTLQ","k,k,i","1","1","1","P23",
"KANDB/W/D","k,k,k","1","1","0.5","P23",
"KANDQ","k,k,k","1","1","1","P23",
"KANDNB/W/D","k,k,k","1","1","0.5","P23",
"KANDNQ","k,k,k","1","1","1","P23",
"KORB/W/D","k,k,k","1","1","0.5","P23",
"KORQ","k,k,k","1","1","1","P23",
"KXORB/W/D","k,k,k","1","1","0.5","P23",
"KXORB/W/D/Q","k,k,k","1","1","1","P23",
"KXNORB/W/D","k,k,k","1","1","0.5","P23",
"KXNORQ","k,k,k","1","1","1","P23",
"KNOTB/W/D","k,k","1","1","0.5","P23",
"KNOTQ","k,k","1","1","1","P23",
"KTESTB/W/D/Q","k,k","1","6","1","P23",
"KORTESTB/W/D/Q","k,k","1","6","1","P23",
